@import '../../../../../theme/theme';

.MenuContainer {

    display: flex;
    flex-flow: row;
    justify-content: space-between;
    overflow: auto;
    .InnerContainer {
        display: flex;
        flex-flow: column;
        min-height: 100vh;
        padding: 30px;
        .HeaderContainer {
            display: flex;
            justify-content: space-between;
        }
        .FoodMenuContainer {
            max-width: 70%;
            display: flex;
            flex-flow: row wrap;
            margin: auto;
            max-height: 500px;
            overflow-y: auto;
        }
        .Button {
            display: none;
        }
    }
    .CheckoutContainer {
        overflow: hidden;
        display: flex;
        flex-flow: column;
        background-color: GetColorTheme(MainContrast);
        border-radius: 35px 0 0 35px;
        min-width: 40vh;
        .CheckoutInnerContainer {
            overflow: hidden;
            display: flex;
            padding: 5px 5px 5px 5px;
            flex-flow: column;
            min-width: inherit;            
            justify-content: space-between;
            min-height: 80vh;
            max-height: 80vh;
            margin: auto;
            border-radius: 30px 0 0 30px;
            background-color: GetColorTheme(Base);
            .CheckoutList {
                margin: auto;
                min-width: inherit;
                min-height: 80%;
                max-height: 80%;
                overflow-y: scroll;
            }
        }
    }

    // Remove sidebar checkout container if breakpoint hits Tablet portrait dimensions
    @include for-size(GetBreakpoint(TabletPortraitUp)){
        .CheckoutContainer {
            display: none;
        }
    }
    // Remove sidebar checkout container if breakpoint his phone dimensions
    @include for-size(GetBreakpoint(Phone)){
        flex-flow: column;
        .InnerContainer {
            .FoodMenuContainer {
                max-height: 200px;
            }
        }
        .CheckoutContainer {
            display: none;
        }
        .InnerContainer {
            .Button {
                display: block;
            }
        }
    }
}